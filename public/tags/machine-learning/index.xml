<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>machine-learning on 無極</title>
    <link>https://kexinwei.org/tags/machine-learning/</link>
    <description>Recent content in machine-learning on 無極</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 08 Jul 2021 17:38:25 +0800</lastBuildDate><atom:link href="https://kexinwei.org/tags/machine-learning/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AI</title>
      <link>https://kexinwei.org/docs/learn/AI/</link>
      <pubDate>Thu, 08 Jul 2021 17:38:25 +0800</pubDate>
      
      <guid>https://kexinwei.org/docs/learn/AI/</guid>
      <description>Reinforcement Learninng #   check probability is correct replay reuse, not always interacting, split into stages, or types  Computer Vision #   build 3d for object classification position for area + class label power up classification for multiple objects in one scene parameter tuning under reinforcement learning: link accuracy as reward, parameter as actions  Natural Language Processing #   from language to video building voice control to programming  voice control to logica, puls add or minus more complicated logic    Learning at Udemy S1 - Introduction S2 - Python Text Basics S3 - Natural Language Processing Basics S4 - &amp;hellip;</description>
    </item>
    
    <item>
      <title>NNN Learning Notes</title>
      <link>https://kexinwei.org/docs/ai/nn-notes/</link>
      <pubDate>Mon, 07 Dec 2020 08:55:38 +0800</pubDate>
      
      <guid>https://kexinwei.org/docs/ai/nn-notes/</guid>
      <description>In any case, you will need to get started with reading up on machine learning. i would suggest you first briefly start with neural networks, followed by deep convolutional neural networks just to get used to the idea of deep learning and subsequently focus on picking up reinforcement learning. As this machine learning field heavily requires you to be able to do programming, I would suggest that you try to implement the models you learnt and get familiar with the various packages of pytorch, tensorflow, fastai.</description>
    </item>
    
  </channel>
</rss>
